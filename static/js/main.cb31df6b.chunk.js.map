{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","this","htmlFor","type","pattern","title","required","onChange","Component","Filter","filter","filterContact","ContactList","contacts","onDeleteContact","map","id","onClick","App","deleteContact","contactId","prevState","contact","addToContact","data","newContact","uuidv4","toLowerCase","includes","alert","target","getVisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb31df6b.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <div className=\"inner_form\">\n        <form onSubmit={this.handleSubmit} className=\"form\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleInputChange}\n          />\n          <label htmlFor=\"number\">Number</label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleInputChange}\n          />\n          <button className=\"btn_form\" type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","const Filter = ({ filter, filterContact }) => {\n  return (\n    <div>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={filterContact}\n        value={filter}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","const ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className=\"contact_list\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className=\"contact_list_item\">\n          <p className=\"contact_name\">\n            {name}: {number}\n          </p>\n          <button className=\"contact_btn\" onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  addToContact = data => {\n    const { contacts } = this.state;\n    const newContact = { ...data, id: uuidv4() };\n\n    if (\n      contacts\n        .map(contact => contact.name.toLowerCase())\n        .includes(data.name.toLowerCase())\n    ) {\n      alert(`${data.name} is already in contacts`);\n    } else {\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  filterContact = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const contacts = this.getVisibleContacts();\n    const { filter } = this.state;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addToContact} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} filterContact={this.filterContact} />\n        <ContactList contacts={contacts} onDeleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}